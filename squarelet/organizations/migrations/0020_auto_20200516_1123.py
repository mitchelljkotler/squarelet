# Generated by Django 2.1.7 on 2020-05-16 15:23

# Django
from django.db import migrations

ENTITLEMENTS = {
    "professional": {
        "minimum_users": 1,
        "base_requests": 20,
        "requests_per_user": 0,
        "feature_level": 1,
    },
    "organization": {
        "minimum_users": 5,
        "base_requests": 50,
        "requests_per_user": 5,
        "feature_level": 2,
    },
    "admin": {
        "minimum_users": 1,
        "base_requests": 500,
        "requests_per_user": 0,
        "feature_level": 2,
    },
    "beta": {
        "minimum_users": 1,
        "base_requests": 5,
        "requests_per_user": 0,
        "feature_level": 1,
    },
    "custom-crp": {
        "minimum_users": 75,
        "base_requests": 50,
        "requests_per_user": 5,
        "feature_level": 2,
    },
    "wbrc": {
        "minimum_users": 15,
        "base_requests": 75,
        "requests_per_user": 5,
        "feature_level": 2,
    },
    "education-grant": {
        "minimum_users": 30,
        "base_requests": 50,
        "requests_per_user": 0,
        "feature_level": 1,
    },
}


def set_resources(apps, schema_editor):
    """Set resources for MuckRock entitlements"""
    Entitlement = apps.get_model("organizations", "Entitlement")
    Client = apps.get_model("oidc_provider", "Client")

    muckrock_client, _created = Client.objects.get_or_create(
        name__startswith="MuckRock", defaults={"name": "MuckRock"}
    )

    for slug, resources in ENTITLEMENTS.items():
        updated = Entitlement.objects.filter(
            slug__endswith=slug, client=muckrock_client
        ).update(resources=resources)
        assert updated == 1, f"Exactly one entitlement should match each slug: {slug}"


class Migration(migrations.Migration):

    dependencies = [("organizations", "0019_entitlement_resources")]

    operations = [migrations.RunPython(set_resources, migrations.RunPython.noop)]
